\begin{document}
\title{From camera space to world space}
\subsection{From camera space to world space}
\begin{script}
time = new doubleanimator(1.0);
nf =new decimalformat("#.###");
cam = new camera([3,5,-15] , [-7.221,4,3.402],[0,1,0] );
a = new axis3d();
campos = new point3d("C",0,3,-9);
campos.setDraggable(false);
camdir = new vector3d("l",0,0,1);
raycam = new raycam3d(campos,camdir );


px = 10.0;
py = 5.0;
pxslider = new slider("",px,[0,31],[100,60],320.0,EAST);
pxslider.setLabel("\red{px} : {#px}" );
pxslider.addSnapsEvery(1.0);
pyslider = new slider("",py,[0,17],[100,30],180,EAST);
pyslider.setLabel("\green{py} : {#py}" );
pyslider.addSnapsEvery(1.0);
raycam.setRayPx(px);
raycam.setRayPy(py);
raycam.setRayVisible(false);
raycam.setLookVectorVisible(false);

wp = new point("(0 0)", 0,0);

ar = 16.0/9.0;
width=32.0;
height=18.0;
wx = (2*((px+0.5)/width) -1.0)*ar;
wx.setCaption("c_x");
wy = (2*((py+0.5)/height)-1.0);
wy.setCaption("c_y");

vx = new vector3d("right",1,0,0);
vx.setStyleName("xAxis");
vy = new vector3d("up",0,1,0);
vy.setStyleName("yAxis");
vz = new vector3d("look",0,0,1);
vz.setStyleName("zAxis");

ray = wx*vx + wy*vy + vz;
ray.setCaption("r");
ray.setStyleName("xAxis2");
ray.setBasePoint(campos);

rl = length(ray);
rn = ray/rl;
rn.setBasePoint(campos);
rn.setCaption("r_N");
rn.setStyleName("xAxis2");

co = campos + vz;
m1 = new measurement3d("\mathvalue{1}",co,campos);
m1.setDirection([0,-1,0]);
vz.setBasePoint(campos);

cox = co + wx*vx;
m2 = new measurement3d("{$wx}",cox,co);
m2.setDrawSegment(true);
m2.setDirection([0,0,1]);
m2.setStyleName("xAxis");
svx = wx*vx;
svx.setBasePoint(co);
svx.setStyleName("xAxis");
svx.setCaption("");

coy = cox + wy*vy;
m3 = new measurement3d("{$wy}",cox,coy);
m3.setDrawSegment(true);
m3.setStyleName("yAxis");
m3.setDirection([0,0,1]);

svy = wy*vy;
svy.setBasePoint(cox);
svy.setStyleName("yAxis");
svy.setCaption("");

end = campos + ray;
end.setCaption("w");
s1 = new vsegment3d("", campos,end);
end.setStyleName("point");
end.setDraggable(false);
end.setDrawXYBase(false);
\end{script}


\begin{picture3d}
\dimension{1300,720}
\begin{part}
\begin{text}
The ray vector is now a \red{linear} combination of the three vectors {$vx}, {$vy} and {$vz}:\\ \\
{$ray} = {&ray$(wx,wy)}
\end{text}
\include{time,cam,a,campos,raycam}
\end{part}

\begin{part}
\begin{text}
Let's begin with the {$vz} vector of this combination, this vector is always scaled with a factor \mathvalue{1}
\end{text}
\include{m1,vz}
\end{part}

\begin{part}
\begin{text}
Next we add the scaled {$vx} vector, which is calculated as {&svx$(wx)}. \\
Note: {$wx} can be positive or negative.
\end{text}
\include{m2,svx}
\end{part}

\begin{part}
\begin{text}
Finally we add the scaled {$vy} vector, which is calculated as {&svy$(wy)}. 
\end{text}
\include{m3,svy}
\end{part}

\begin{part}
\begin{text}
With the \green{head-tail} method we can indeed see that the final vector {$ray} is the result of
 the linear combination: \\{$ray} = {&ray$(wx,wy)}
\end{text}
\include{ray,pxslider,pyslider}
\end{part}

\begin{part}
\begin{text}
This ray vector is \red{not} normalized, {&rl$(ray)} = {#rl>>nf} \\
{$rn} = {&rn$(ray)} = {#rn>>nf}
\end{text}
\exclude{ray,m1,m2,m3,svy,svx,vz}
\include{rn,s1,end}
\end{part}
\end{picture3d}

\end{document}
